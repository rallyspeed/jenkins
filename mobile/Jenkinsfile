#!/usr/bin/groovy


pipeline {
	agent any
	options {
        	disableConcurrentBuilds()
    	}
	environment {
		PYTHONPATH = "${WORKSPACE}"
	}
   	stages {
        	stage("Deploy - Mobsf") {
			steps { deploy('mobsf') }
		}
		stage("Test - Mobsf") {
            		steps { runUAT(8000) }
		}
		stage("Upload APK") {
			steps { upload() }
		}
	}
}

//steps
def deploy(environment) {

	def containerName = ''
	def port = ''

	if ("${environment}" == 'mobsf') {
		containerName = "mobsf"
		port = "8000"
	} 
	else {
		println "Environment not valid"
		System.exit(0)
	}

	sh "docker ps -f name=${containerName} -q | xargs --no-run-if-empty docker stop"
	sh "docker ps -a -f name=${containerName} -q | xargs -r docker rm"
	sh "docker run -d -p ${port}:8000 --name ${containerName} opensecurity/mobile-security-framework-mobsf:latest"

}

def upload() {
	def app ='app.apk'
	def token ='3fc39aaa54925c9b4a311322d731023295e0e1618f0668695049b07924ca81ef'
	
	sh "echo ${token}"
	sh "curl -F 'file=@mobile/${app}' http://localhost:8000/api/v1/upload -H \"Authorization:${token}\""
}

def runUAT(port) {
	sh "mobile/tests/runUAT.sh ${port}"
}
